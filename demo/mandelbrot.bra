{mandelbrot.bra

for each pixel (Px, Py) on the screen do
    x0 := scaled x coordinate of pixel (scaled to lie in the Mandelbrot X scale (-2.00, 0.47))
    y0 := scaled y coordinate of pixel (scaled to lie in the Mandelbrot Y scale (-1.12, 1.12))
    x := 0.0
    y := 0.0
    iteration := 0
    max_iteration := 1000
    while (x*x + y*y ≤ 2*2 AND iteration < max_iteration) do
        xtemp := x*x - y*y + x0
        y := 2*x*y + y0
        x := xtemp
        iteration := iteration + 1
    
    color := palette[iteration]
    plot(Px, Py, color)

}

Mandelbrot=
  ( doit
  =   
    .   new$(calculation,(="1.0E3")):?iter
      &     new
          $ ( calculation
            , ( 
              =   "0.0E0":?x:?y
                & "1.0E0":?J
                &   whl
                  ' ( hypot$(!x,!y):~>"2.0E0"
                    & !J:<"5.0E3"
                    & !x*!x+"-1.0E0"*!y*!y+!a0:?xtemp
                    & "2.0E0"*!x*!y+!a1:?y
                    & !xtemp:?x
                    & "1.0E0"+!J:?J
                    )
                & !J
              )
            )
        : ?iter
      & ( ~
        |   out$"ITER DEFINED"
          & (iter..print)$
          & out$"ITER PRINTED"
        )
      & ( flt
        =   e,d,m,s,f
          .     !arg:(?arg,~<0:?d)
              & !arg:0
            |     ( -1*!arg:>0:?arg&-1
                  | 1
                  )
                : ?s
              &   10\L!arg
                :   ?e
                  + ( 10\L?m
                    | 0&1:?m
                    )
              & (   !m+1/2*1/10^!d:~<10
                  & 1+!e:?e
                  & !m*1/10:?m
                | 
                )
              & @( div$(!m+1/2*(1/10^!d:?d),!d)
                 : `%?f ?m
                 )
              &   str
                $ ( !s*!f
                    (!d:~1&"."|)
                    !m
                    E
                    !e
                  )
        )
      &   ( ~&"[0.2929859127507,0.6117848324958,1.0E-11]"
          | "[-0.0452407411,0.9868162204352258,2.7E-10]"
          | "[-0.7463,0.1102,0.005]"
          | "[0.45272105023,0.396494224267,1.4E-10]"
          | "[-0.235125,0.827215,4.0E-5]"
          | "[-0.722,0.246,0.019]"
          | "[-0.16070135,1.0375665,1.0E-7]"
          )
        : ?jsn
      & (   get$(!jsn,MEM,JSN):(,#%?X #%?Y #%?R)
          & !X+-2*!R:?x0
          & !x0+4*!R:?endx
          & !Y+-1*!R:?beginy
          & !beginy+2*!R:?endy
          & 1/500*!R:?delta
        | -2:?x0
        )
      & ( f
        =   
          .   !arg:5000&" "
            | !arg:>3000&"#"
            | !arg:>2000&"*"
            | !arg:>1000&","
            | "."
        )
      & :?alliters
      & 100000:?miniter
      &   whl
        ' ( ( !x0:~>!endx
            | ~&!x0:~>47/100
            )
          & (!beginy|-112/100):?y0
          & :?iters
          &   whl
            ' ( ( !y0:~>!endy
                | ~&!y0:~>112/100
                )
              & (       (iter..calculate)
                      $ (flt$(!x0,19),flt$(!y0,19))
                    : ?Niter
                  &   get$(str$("[" !Niter "]"),MEM,JSN)
                    : (,?Niter)
                  & f$!Niter !iters:?iters
                  & ( !Niter:<!miniter:?miniter
                    | 
                    )
                | "weet niet":?Niter
                )
              & (!delta|1/1000)+!y0:?y0
              )
          & str$(!iters \n) !alliters:?alliters
          & (2*!delta|1/1000)+!x0:?x0
          )
      &   put
        $ (str$!alliters,"MandelbrotSet.txt",NEW WYD BIN)
      & out$(1+!miniter+-1)
  )
  ( new
  =   
    .   ~
      |   clk$:?t0
        & (its.doit)$
        & clk$:?t1
        & out$(flt$(!t1+-1*!t0,3))
  );

r=
  get'("mandelbrot.bra",TXT)
& rmv$(str$(mandelbrot ".bak"))
& ren$("mandelbrot.bra".str$(mandelbrot ".bak"))
&   put
  $ ( "{mandelbrot.bra

for each pixel (Px, Py) on the screen do
    x0 := scaled x coordinate of pixel (scaled to lie in the Mandelbrot X scale (-2.00, 0.47))
    y0 := scaled y coordinate of pixel (scaled to lie in the Mandelbrot Y scale (-1.12, 1.12))
    x := 0.0
    y := 0.0
    iteration := 0
    max_iteration := 1000
    while (x*x + y*y ≤ 2*2 AND iteration < max_iteration) do
        xtemp := x*x - y*y + x0
        y := 2*x*y + y0
        x := xtemp
        iteration := iteration + 1
    
    color := palette[iteration]
    plot(Px, Py, color)

}

"
    , "mandelbrot.bra"
    , NEW
    , BIN
    )
& lst'(Mandelbrot,"mandelbrot.bra",APP)
& put'(\n,"mandelbrot.bra",APP,BIN)
& lst'(r,"mandelbrot.bra",APP)
&   put
  $ (str$("\nnew'" Mandelbrot ";\n"),"mandelbrot.bra",APP,BIN)
& ;

new'Mandelbrot;
