{gravity.bra
ùïåùïãùîΩ-ùü†

have some points move under influence of gravity}

X=
  ( do
  =   
    .   4:?planets
      & 3:?dimensions
      & 6000:?iterations
      & 300:?g
      & 1:?M
      & 1/11:?U
      & !dimensions*!planets:?dimpla
      &     
          ' ( tbl$(Diff,$dimensions,1)
            &   tbl
              $ ( T
                , $iterations
                , $planets
                , $dimensions
                , 3
                )
            & $iterations:?n
            & !v1:?V
            & (add=2*!v0+!v1)
            & add$(5,6):?eleven
            &   whl
              ' ( !n:>0
                & -1+!n:?n
                & $planets:?p
                &   whl
                  ' ( !p:>0
                    & -1+!p:?p
                    & $dimensions:?d
                    &   whl
                      ' ( !d:>0
                        & -1+!d:?d
                        & 0:?(ind$(a2,!p,!d))
                        )
                    )
                & $planets:?p
                &   whl
                  ' ( !p:>0
                    & -1+!p:?p
                    & $planets:?q
                    &   whl
                      ' ( !q:>0
                        & -1+!q:?q
                        & (   !q:~!p
                            & 0:?dist2
                            & $dimensions:?d
                            &   whl
                              ' ( !d:>0
                                & -1+!d:?d
                                &     !(ind$(a0,!p,!d))
                                    + -1*!(ind$(a0,!q,!d))
                                  : ?(ind$(Diff,!d))
                                & !Diff^2+!dist2:?dist2
                                )
                            & ( !dist2:0
                              |   !dist2^-3/2:?tsid3
                                & $dimensions:?d
                                &   whl
                                  ' ( !d:>0
                                    & -1+!d:?d
                                    &     -1
                                        * $g
                                        * !(ind$(Diff,!d))
                                        * !tsid3
                                      : ?(ind$(a2,!p,!d))
                                    )
                              )
                          | 
                          )
                        )
                    )
                & $planets:?p
                &   whl
                  ' ( !p:>0
                    & -1+!p:?p
                    & $dimensions:?d
                    &   whl
                      ' ( !d:>0
                        & -1+!d:?d
                        &     $M*!(ind$(a2,!p,!d))
                            + !(ind$(a1,!p,!d))
                          : ?a1
                        &   $U*!a1+!(ind$(a0,!p,!d))
                          : ?a0
                        & !a0:?(ind$(T,!n,!p,!d))
                        )
                    )
                )
            & !n
            )
        : ?code
      & new$(calculation,!code):?calc
      & (~|(calc..print)$)
      & (     (calc..calculate)
            $ ( 
              .   
                ,   (,0 100 0)
                    (,0 -100 0)
                    (,0 10 30)
                    (,1 0 0)
              .   
                ,   (,2 0 0)
                    (,-2 0 0)
                    (,0 1 0)
                    (,-10/21 0 0)
              .   
                ,   (,0 0 0)
                    (,0 0 0)
                    (,0 0 0)
                    (,0 0 0)
              . 123
              )
          & out$executed
          & (calc..export)$(N,T):?pointsT
          & (calc..export)$(N,a0):?pointsa0
          & (calc..export)$(N,a1):?pointsa1
          & (calc..export)$(N,a2):?pointsa2
          & (calc..export)$(N,v3):?varv3
          & out$exported
          & out$(varv3 !varv3)
          & lst$(pointsT,pointsT,NEW)
          & lst$(pointsa0,pointsa0,NEW)
          & lst$(pointsa2,pointsa2,NEW)
          &   vap$((=.!arg).!pointsT.\n)
            : ?points
          & :?L
          &   whl
            ' ( !points:%?x %?y %?z ?points
              & (!x+!z.!y) !L:?L
              )
          & lst$(L,L,NEW)
          &     ("!DOCTYPE html".)
                ( html
                .   
                  ,   ( head
                      .   
                        ,   (title.,Gravitation)
                            ( meta
                            .     (http-equiv.content-type)
                                  (content."text/html; charset=UTF-8")
                              , 
                            )
                      )
                      ( body
                      .   
                        , ( svg
                          .     (height.1500)
                                (width.1500)
                                (viewBox."0 0 1500 1500")
                            ,   map
                              $ ( ( 
                                  =   
                                    .   !arg:(?a.?b)
                                      & ( circle
                                        .     (cx.!a+300)
                                              (cy.!b+300)
                                              (r.1)
                                              (stroke.black)
                                              (fill.red)
                                          , 
                                        )
                                  )
                                . !L
                                )
                          )
                      )
                )
            : ?SVG
          & put$(toML$!SVG,"svg.html",NEW)
        | out$"something wrogn"
        )
      & out$"Reset calc"
      & (|:?calc)
      & out$"Calc reset"
  )
  (new=.~|(its.do)$);

r=
  get'("gravity.bra",TXT)
& rmv$(str$(gravity ".bak"))
& ren$("gravity.bra".str$(gravity ".bak"))
&   put
  $ ( "{gravity.bra
ùïåùïãùîΩ-ùü†

have some points move under influence of gravity}

"
    , "gravity.bra"
    , NEW
    , BIN
    )
& lst'(X,"gravity.bra",APP)
& put'(\n,"gravity.bra",APP,BIN)
& lst'(r,"gravity.bra",APP)
& put$(str$("\nnew'" X ";\n"),"gravity.bra",APP,BIN)
& ;

new'X;
