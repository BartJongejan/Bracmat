{gravity.bra
ùïåùïãùîΩ-ùü†

have some points move under influence of gravity}

X=
  ( do
  =     L M Q SVG U a b calc code
      , dimensions dimpla g iterations
      , pla planets pointsT pointsa0 pointsa1 pointsa2
      , times varv3 x y z
    .   4:?planets
      & 3:?dimensions
      & 30000:?iterations
      & 300:?g
      & 1:?MB
      & 1/11:?U
      & !dimensions*!planets:?dimpla
      &     
          ' (   (a.position)
                (a.velocity)
                (a.acceleration)
                (s.v3)
                (s.v4)
            .   tbl$(Diff,$dimensions,1)
              &   tbl
                $ ( T
                  , $iterations
                  , $planets
                  , $dimensions
                  , 3
                  )
              & rank$T:?DD
              & 0:?b
              &   whl
                ' ( !b:<!DD
                  & range$(T,!b):?R
                  & out$!b
                  & out$!R
                  & 1+!b:?b
                  )
              & $iterations:?n
              & !v3+!v4:?V
              & ( add
                =     (s.aap)
                      (s.noot)
                      (a.mies)
                  .     2*!aap+!noot+!(idx$(mies,0,0))
                      : ?H
                    & !H+-1
                )
              & add$(5,!v3,velocity):?eleven
              &   whl
                ' ( !n:>0
                  & -1+!n:?n
                  & $planets:?p
                  &   whl
                    ' ( !p:>0
                      & -1+!p:?p
                      & $dimensions:?d
                      &   whl
                        ' ( !d:>0
                          & -1+!d:?d
                          & 0:?(idx$(acceleration,!p,!d))
                          )
                      )
                  & $planets:?p
                  &   whl
                    ' ( !p:>0
                      & -1+!p:?p
                      & $planets:?q
                      &   whl
                        ' ( !q:>0
                          & -1+!q:?q
                          & (   !q:~!p
                              & 0:?dist2
                              & $dimensions:?d
                              &   whl
                                ' ( !d:>0
                                  & -1+!d:?d
                                  &     !(idx$(position,!p,!d))
                                      + -1*!(idx$(position,!q,!d))
                                    : ?(idx$(Diff,!d))
                                  & !Diff^2+!dist2:?dist2
                                  )
                              & ( !dist2:0
                                |   !dist2^-3/2:?tsid3
                                  & $dimensions:?d
                                  &   whl
                                    ' ( !d:>0
                                      & -1+!d:?d
                                      &     -1
                                          * $g
                                          * !(idx$(Diff,!d))
                                          * !tsid3
                                        : ?(idx$(acceleration,!p,!d))
                                      )
                                )
                            | 
                            )
                          )
                      )
                  & $planets:?p
                  &   whl
                    ' ( !p:>0
                      & -1+!p:?p
                      & $dimensions:?d
                      &   whl
                        ' ( !d:>0
                          & -1+!d:?d
                          &       $M
                                * !(idx$(acceleration,!p,!d))
                              + !(idx$(velocity,!p,!d))
                            : ?velocity
                          &     $U*!velocity
                              + !(idx$(position,!p,!d))
                            : ?position
                          &   !position
                            : ?(idx$(T,!n,!p,!d))
                          )
                      )
                  )
              & !n
            )
        : ?code
      & new$(calculation,!code):?calc
      & (~|(calc..print)$)
      & (     (calc..calculate)
            $ (   
                ,   (,0 100 0)
                    (,0 -100 0)
                    (,0 10 30)
                    (,1 0 0)
              .   
                ,   (,2 0 0)
                    (,-2 0 0)
                    (,0 1 0)
                    (,-10/21 0 0)
              .   
                ,   (,0 0 0)
                    (,0 0 0)
                    (,0 0 0)
                    (,0 0 0)
              . 123
              . 77
              )
          & out$executed
          & (calc..export)$(N,T):?pointsT
          & (calc..export)$(N,position):?pointsa0
          & (calc..export)$(N,velocity):?pointsa1
          &   (calc..export)$(N,acceleration)
            : ?pointsa2
          & (calc..export)$(N,v3):?varv3
          & (calc..export)$(N,eleven):?eleven
          & (calc..export)$(N,V):?V
          & out$exported
          & out$(varv3 !varv3)
          & out$(eleven !eleven)
          & out$(V !V)
          & lst$(pointsT,pointsT,NEW)
          & lst$(pointsa0,pointsa0,NEW)
          & lst$(pointsa2,pointsa2,NEW)
          & !pointsT:(,?times)
          & out$map
          &     map
              $ ( ( 
                  =   
                    .   !arg:(,?pla)
                      &   map
                        $ ( ( 
                            =   
                              .   !arg:(,%?x %?y %?z)
                                & (!x+!z.!y)
                            )
                          . !pla
                          )
                  )
                . !times
                )
            : ?L
          & out$mapped
          &     ("!DOCTYPE html".)
                ( html
                .   
                  ,   ( head
                      .   
                        ,   (title.,Gravitation)
                            ( meta
                            .     (http-equiv.content-type)
                                  (content."text/html; charset=UTF-8")
                              , 
                            )
                      )
                      ( body
                      .   
                        , ( svg
                          .     (height.1500)
                                (width.1500)
                                (viewBox."0 0 1500 1500")
                            ,   map
                              $ ( ( 
                                  =   
                                    .   !arg:(?a.?b)
                                      & ( circle
                                        .     (cx.!a+300)
                                              (cy.!b+300)
                                              (r.1)
                                              (stroke.black)
                                              (fill.red)
                                          , 
                                        )
                                  )
                                . !L
                                )
                          )
                      )
                )
            : ?SVG
          & out$writing
          & put$(toML$!SVG,"svg.html",NEW)
        | out$"something wrogn"
        )
      & out$"Reset calc"
      & (|:?calc)
      & out$"Calc reset"
  )
  (new=.~|(its.do)$);

r=
  get'("gravity.bra",TXT)
& rmv$(str$(gravity ".bak"))
& ren$("gravity.bra".str$(gravity ".bak"))
&   put
  $ ( "{gravity.bra
ùïåùïãùîΩ-ùü†

have some points move under influence of gravity}

"
    , "gravity.bra"
    , NEW
    , BIN
    )
& lst'(X,"gravity.bra",APP)
& put'(\n,"gravity.bra",APP,BIN)
& lst'(r,"gravity.bra",APP)
& put$(str$("\nnew'" X ";\n"),"gravity.bra",APP,BIN)
& ;

new'X;
