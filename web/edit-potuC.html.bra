{editbracmatjs.bra

Perform the edits in bracmat html, as described in emscripten-bracmat-readme.txt}

X=
  ( correctPadding
  =   a z
    .   @(!arg:?a "padding: none;" ?z)
      & str$(!a "padding: 0;" !z)
  )
  ( removeStyle
  =   html stl a z
    .   !arg:(?html.?stl)
      & @(!html:?a !stl ? " }" ?z)
      & out$(removed !stl)
      & str$(!a !z)
  )
  ( replaceStyle =.
  @(!arg:?A "<style>" ? "</style>" ?Z)
  & str$(!A "<style>
body {
font-family: arial;
margin: 0;
padding: 10px;
}

#input, #output {
width: 98%;
height: 230px;
margin: 0 auto;
margin-top: 10px;
margin-bottom: 10px;
border-left: 0px;
border-right: 0px;
padding: 10px;
display: block;
background-color: white;
color: black;
font-family: 'Lucida Console', Monaco, monospace;
outline: ridge;
}
</style>
" !Z)
  )
  ( removeElement
  =   html elstart elend a z
    .   !arg:(?html.?elstart.?elend)
      & @(!html:?a !elstart ? !elend ?z)
      & out$(removed element !elstart !elend)
      & str$(!a !z)
  )
  ( replaceTitle
  =   html a z
    .   !arg:?html
      & @(!html:?a "<title>" ? "</title>" ?z)
      & str$(!a "<title>Bracmat</title>" !z)
  )
  ( removeSVG
  =   a z
    . @(!arg:?a "<svg" ? "</svg>" ?z)&str$(!a !z)
  )
  ( includeJS
  =   a z html js
    .   !arg:(?html.?js)
      & @( !html
         :   ?a
             "<script async type=\"text/javascript\" src=\"potuC.js\"></script>"
             ?z
         )
      & str$(!a "<script async type=\"text/javascript\">" !js "</script>" !z)
  )
  ( insertBeforeTextArea
  =   a z
    .   !arg:(?html.?toInsert)
      & @(!html:?a "<textarea" ?z)
      & str$(!a !toInsert "<textarea" !z)
  )
  ( doit
  =   
    .     ( "The text in the file 'safereadme', as constructed by the next
             lines, can be cut and pasted directly into this script."
          |     get$("emscripten-bracmat-readme.txt",STR,TXT)
              : ?readme
            & lst$(readme,safereadme,NEW)
          )
        & out$"Trying to read bracmatJS.html"
        & get$("potuC.html",STR,TXT):?html
        & out$"potuC.html read"
        & out$"Trying to read potuC.js"
        & get$("potuC.js",STR,TXT):?js
        & out$"potuC.js read"
        & (its.correctPadding)$!html:?html
        & out$"corrected padding"
        & (its.removeStyle)$(!html."#emscripten_logo"):?html
        & (its.removeStyle)$(!html.".spinner"):?html
        &   (its.removeStyle)$(!html."@-webkit-keyframes rotation")
          : ?html
        &   (its.removeStyle)$(!html."@-moz-keyframes rotation")
          : ?html
        & (its.removeStyle)$(!html."@-o-keyframes rotation"):?html
        & (its.removeStyle)$(!html."@keyframes rotation"):?html
        & (its.removeStyle)$(!html."#status"):?html
        & (its.removeStyle)$(!html."#progress"):?html
        & (its.removeStyle)$(!html."#controls"):?html
        & (its.removeStyle)$(!html."canvas.emscripten"):?html
        & (its.replaceStyle)$!html:?html
        &     (its.removeElement)
            $ (!html."<a href=\"http://emscripten.org\">"."</a>")
          : ?html
        &     (its.removeElement)
            $ (!html."<div class=\"spinner\" id='spinner'>"."</div>")
          : ?html
        &     (its.removeElement)
            $ (!html."<div class=\"emscripten\" id=\"status\">"."</div>")
          : ?html
        &   (its.removeElement)$(!html."<div class=\"emscripten\">"."</div>")
          : ?html
        & ( (its.removeElement)$(!html."<span>"."</span>"):?html
          & (its.removeElement)$(!html."<span>"."</span>"):?html
          & (its.removeElement)$(!html."<span>"."</span>"):?html
          &   (its.removeElement)$(!html."<span id='controls'>"."</span>")
            : ?html
          )
        &     (its.removeElement)
            $ (!html."<div class=\"emscripten_border\">"."</div>")
          : ?html
        & (   out$"removing SVG"
            & (its.removeSVG)$!html:?html
            & out$"removed SVG"
          | 
          )
        &   "<h1>Bracmat ... in your browser ...</h1>
           <p>Write Bracmat expressions in the upper text box.
           After pressing the <strong>evaluate</strong> button,
           the result of the evaluation of your expressions
           will eventually appear in the lower text box.<br />
           Bracmat is a programming language for symbolic computation with
           an exquisite programming construct for pattern matching.
           Read the 
           <a href=\"http://jongejan.dk/bracmat.html\">documentation</a>, and
           see many more examples on
           <a href=\"http://rosettacode.org/wiki/Category:Bracmat\">rosettacode.org</a>.
           <br />
           For this demo version the C source code in which Bracmat is
           written, is translated to JavaScript, so the demo runs within
           the confines of your browser, with all the limitations that follow, 
           such as the inability to read and write files.
           <br />
           Full, more than 100 times faster versions of Bracmat compiled and
           linked for Windows, macOS and Linux, together with the C source
           code, can be found on 
           <a href=\"https://github.com/BartJongejan/Bracmat\">GitHub</a>.<br>
           </p>"
          : ?introduction
        & (its.insertBeforeTextArea)$(!html.!introduction):?html
        & out$"inserted intro"
        &   "
<textarea class=\"emscripten\" id=\"input\" value=\"\" cols=\"80\" rows=\"20\">({Dinesman's multiple-dwelling problem. See 
http://rosettacode.org/wiki/Dinesman's_multiple-dwelling_problem#Bracmat}
    
    Baker Cooper Fletcher Miller Smith:?people
  &amp; ( constraints
    =   
      .   !arg
        : ~(? Baker)
        : ~(Cooper ?)
        : ~(Fletcher ?|? Fletcher)
        : ? Cooper ? Miller ?
        : ~(? Smith Fletcher ?|? Fletcher Smith ?)
        : ~(? Cooper Fletcher ?|? Fletcher Cooper ?)
    )
  &amp; ( solution
    =   floors persons A Z person
      .   !arg:(?floors.?persons)
        &amp; (   !persons:
            &amp; constraints$!floors
            &amp; out$(\"Inhabitants, from bottom to top:\" !floors)
            &amp; ~     { The ~ always fails on evaluation. Here, 
failure forces Bracmat to backtrack and find all solutions, not just the
 first one. }
          |   !persons
            :   ?A
                %?`person
                (?Z&amp;solution$(!floors !person.!A !Z))
          )
    )
  &amp; solution$(.!people)
|                   { After outputting all solutions, the lhs of the | 
operator fails. The rhs of the | operator, here an empty string, is the 
final result. }
);</textarea>"
          : ?inputField
        &   "<input value=\"evaluate\" onclick=\"takeinput()\" type=\"button\">"
          : ?submitButton
        &   (its.insertBeforeTextArea)$(!html.!inputField !submitButton)
          : ?html
        & out$"inserted input field and submit button"
        & put$(!js,"potuC.js",TXT,NEW)
        & @(!html:?a "</body>" ?z)
        & out$"found body close tag"
        &     str
            $ ( !a
                "
    <script>
    function execute(text) {
      var out;
      var cstyle_ptr = allocate(intArrayFromString(text), ALLOC_NORMAL);
      Module['print'](\"{?} \"+text+\"\\n{!} \");
      out = _oneShot(cstyle_ptr);
    }
    function takeinput() {
    var text = document.getElementById('input').value;
    execute(text);
    }
//    _startProc();
//    execute(\"4:?a;!a^2+1;\");
    </script>
 </body>"
                !z
              )
          : ?html
        & (its.includeJS)$(!html.!js):?html
        & (its.replaceTitle)$!html:?html
        & out$"all replacements done"
        & put$(!html,"bracmatJS.html",TXT,NEW)
        & out$"edit succeeded"
      | out$"something went wrong"
  )
  (new=.~|(its.doit)$);

r=
  get'("editbracmatjs.bra",TXT)
& rmv$(str$(editbracmatjs ".bak"))
& ren$("editbracmatjs.bra".str$(editbracmatjs ".bak"))
&   put
  $ ( "{editbracmatjs.bra

Perform the edits in bracmat html, as described in emscripten-bracmat-readme.txt}

"
    , "editbracmatjs.bra"
    , NEW
    , BIN
    )
& lst'(X,"editbracmatjs.bra",APP)
& put'(\n,"editbracmatjs.bra",APP,BIN)
& lst'(r,"editbracmatjs.bra",APP)
& put$(str$("\nnew'" X ";\n"),"editbracmatjs.bra",APP,BIN)
& ;

new'X;
